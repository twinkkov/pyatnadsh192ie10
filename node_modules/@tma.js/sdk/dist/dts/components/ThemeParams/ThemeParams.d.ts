import { WithTrackableState } from '../../classes/WithTrackableState.js';
import { RGB } from '../../colors/types.js';
import { RemoveEventListenerFn } from '../../events/types.js';
import { ThemeParamsParsed, ThemeParamsState } from './types.js';

/**
 * @see Usage: https://docs.telegram-mini-apps.com/platform/theming
 * @see API: https://docs.telegram-mini-apps.com/packages/tma-js-sdk/components/theme-params
 */
export declare class ThemeParams extends WithTrackableState<ThemeParamsState> {
    /**
     * @since v6.10
     */
    get accentTextColor(): RGB | undefined;
    get bgColor(): RGB | undefined;
    get buttonColor(): RGB | undefined;
    get buttonTextColor(): RGB | undefined;
    get destructiveTextColor(): RGB | undefined;
    /**
     * Returns the copy of the internal state of the current component instance.
     */
    getState(): ThemeParamsParsed;
    /**
     * @since v6.10
     */
    get headerBgColor(): RGB | undefined;
    get hintColor(): RGB | undefined;
    /**
     * @returns True in case, current color scheme is recognized as dark. This
     * value is calculated according to theme bg color.
     */
    get isDark(): boolean;
    get linkColor(): RGB | undefined;
    get secondaryBgColor(): RGB | undefined;
    /**
     * @since v6.10
     */
    get sectionBgColor(): RGB | undefined;
    /**
     * @since v6.10
     */
    get sectionHeaderTextColor(): RGB | undefined;
    /**
     * @since v7.6
     */
    get sectionSeparatorColor(): RGB | undefined;
    /**
     * Starts listening to the external theme changes and applies them.
     * @returns Function to stop listening.
     */
    listen(): RemoveEventListenerFn;
    /**
     * @since v6.10
     */
    get subtitleTextColor(): RGB | undefined;
    get textColor(): RGB | undefined;
}
