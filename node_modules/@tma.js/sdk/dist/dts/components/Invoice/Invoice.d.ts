import { WithSupportsAndTrackableState } from '../../classes/WithSupportsAndTrackableState.js';
import { InvoiceStatus } from '../../bridge/events/types.js';
import { PostEvent } from '../../bridge/methods/postEvent.js';
import { Version } from '../../version/types.js';
import { InvoiceState } from './types.js';

/**
 * @see API: https://docs.telegram-mini-apps.com/packages/tma-js-sdk/components/invoice
 */
export declare class Invoice extends WithSupportsAndTrackableState<InvoiceState, 'open'> {
    private readonly postEvent;
    constructor(isOpened: boolean, version: Version, postEvent: PostEvent);
    private set isOpened(value);
    /**
     * True if invoice is currently opened.
     */
    get isOpened(): boolean;
    /**
     * Opens an invoice using its slug.
     * @param slug - invoice slug.
     * @throws {Error} Invoice is already opened.
     */
    open(slug: string): Promise<InvoiceStatus>;
    /**
     * Opens an invoice using its url. It expects passing link in full format, with hostname "t.me".
     * @param url - invoice URL.
     * @param type - value type.
     * @throws {Error} Invoice is already opened.
     */
    open(url: string, type: 'url'): Promise<InvoiceStatus>;
}
