import { WithSupports } from '../../classes/WithSupports.js';
import { PostEvent } from '../../bridge/methods/postEvent.js';
import { CreateRequestIdFn } from '../../request-id/types.js';
import { SupportsFn } from '../../supports/types.js';
import { Version } from '../../version/types.js';

export interface UtilsOpenLinkOptions {
    /**
     * Attempts to use the instant view mode.
     */
    tryInstantView?: boolean;
    /**
     * Attempts to use user preferred browser.
     */
    tryBrowser?: boolean;
}
/**
 * @see API: https://docs.telegram-mini-apps.com/packages/tma-js-sdk/components/utils
 */
export declare class Utils extends WithSupports<'readTextFromClipboard'> {
    private readonly version;
    private readonly createRequestId;
    private readonly postEvent;
    constructor(version: Version, createRequestId: CreateRequestIdFn, postEvent: PostEvent);
    /**
     * Opens a link.
     *
     * The Mini App will not be closed.
     *
     * Note that this method can be called only in response to the user
     * interaction with the Mini App interface (e.g. click inside the Mini App or on the main button).
     * @param url - URL to be opened.
     * @param options - additional options.
     */
    openLink(url: string, options?: UtilsOpenLinkOptions): void;
    /**
     * Opens a link.
     *
     * The Mini App will not be closed.
     *
     * Note that this method can be called only in response to the user
     * interaction with the Mini App interface (e.g. click inside the Mini App or on the main button).
     * @param url - URL to be opened.
     * @param tryInstantView - try to use the instant view.
     * @deprecated Use the second argument as an object.
     */
    openLink(url: string, tryInstantView?: boolean): void;
    /**
     * Opens a Telegram link inside Telegram app. The Mini App will be closed. It expects passing
     * link in full format, with hostname "t.me".
     * @param url - URL to be opened.
     * @throws {Error} URL has not allowed hostname.
     */
    openTelegramLink(url: string): void;
    /**
     * Reads text from clipboard and returns string or null. null is returned
     * in cases:
     * - Value in clipboard is not text
     * - Access to clipboard is not allowed
     */
    readTextFromClipboard(): Promise<string | null>;
    /**
     * Shares specified URL with the passed to the chats, selected by user. After being called,
     * it closes the mini application.
     *
     * This method uses Telegram's Share Links.
     * @param url - URL to share.
     * @param text - text to append after the URL.
     * @see https://core.telegram.org/api/links#share-links
     * @see https://core.telegram.org/widgets/share#custom-buttons
     */
    shareURL(url: string, text?: string): void;
    /**
     * Checks if specified method parameter is supported by current component.
     */
    supportsParam: SupportsFn<'openLink.tryInstantView'>;
}
