import { WithSupportsAndTrackableState } from '../../classes/WithSupportsAndTrackableState.js';
import { PostEvent } from '../../bridge/methods/postEvent.js';
import { Version } from '../../version/types.js';
import { QRScannerOpenOptions, QRScannerState } from './types.js';

/**
 * @see API: https://docs.telegram-mini-apps.com/packages/tma-js-sdk/components/qr-scanner
 */
export declare class QRScanner extends WithSupportsAndTrackableState<QRScannerState, 'close' | 'open'> {
    private readonly postEvent;
    constructor(isOpened: boolean, version: Version, postEvent: PostEvent);
    /**
     * Closes the scanner.
     */
    close(): void;
    private set isOpened(value);
    /**
     * Returns true if the scanner is currently opened.
     */
    get isOpened(): boolean;
    /**
     * Opens the scanner with the specified title shown to user.
     * The method returns a promise with a scanned QR content and null if the scanner was closed.
     * @param options - method options.
     */
    open(options?: QRScannerOpenOptions): Promise<string | null>;
    /**
     * Opens the scanner with the specified title shown to user.
     * The method returns a promise with a scanned QR content and null if the scanner was closed.
     * @param text - title to display.
     */
    open(text?: string): Promise<string | null>;
}
