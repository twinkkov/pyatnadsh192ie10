import { WithSupportsAndTrackableState } from '../../classes/WithSupportsAndTrackableState.js';
import { PostEvent } from '../../bridge/methods/postEvent.js';
import { OpenPopupOptions, PopupState } from './types.js';
import { Version } from '../../version/types.js';

/**
 * @see Usage: https://docs.telegram-mini-apps.com/platform/popup
 * @see API: https://docs.telegram-mini-apps.com/packages/tma-js-sdk/components/popup
 */
export declare class Popup extends WithSupportsAndTrackableState<PopupState, 'open'> {
    private readonly postEvent;
    constructor(isOpened: boolean, version: Version, postEvent: PostEvent);
    private set isOpened(value);
    /**
     * True if the Popup is opened.
     */
    get isOpened(): boolean;
    /**
     * A method that shows a native popup described by the `params` argument.
     * Promise will be resolved when popup is closed. Resolved value will have
     * an identifier of pressed button.
     *
     * In case, user clicked outside the popup or clicked top right popup close
     * button, null will be returned.
     *
     * @param options - popup parameters.
     * @throws {Error} Popup is already opened.
     */
    open(options: OpenPopupOptions): Promise<string | null>;
}
