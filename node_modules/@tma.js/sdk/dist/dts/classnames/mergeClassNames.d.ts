import { UnionOptionalKeys, UnionRequiredKeys } from '../types/unions.js';

export type MergeClassNames<Tuple extends any[]> = Exclude<Tuple[number], number | string | null | undefined | any[] | boolean> extends infer Union ? {
    [K in UnionRequiredKeys<Union>]: string;
} & {
    [K in UnionOptionalKeys<Union>]?: string;
} : never;
/**
 * Merges 2 sets of parameters. Function expects passing an array of objects with values, which
 * could be passed to `classNames` function. As the result, it returns an object with keys
 * from all objects with merged values.
 * @see classNames
 */
export declare function mergeClassNames<T extends any[]>(...partials: T): MergeClassNames<T>;
