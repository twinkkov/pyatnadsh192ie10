import { ExecuteWithOptions, If, IsNever } from '../types/index.js';
import { MiniAppsEventName, MiniAppsEventPayload } from './events/types.js';
import { MiniAppsMethodName, MiniAppsMethodParams } from './methods/types/index.js';

/**
 * Returns all possible payloads for the specified events array.
 */
export type RequestEventsPayloads<E extends MiniAppsEventName[]> = E extends (infer U extends MiniAppsEventName)[] ? MiniAppsEventPayload<U> : never;
export type RequestCaptureEventsFn<E extends MiniAppsEventName[]> = E extends (infer U extends MiniAppsEventName)[] ? (payload: {
    [K in U]: If<IsNever<MiniAppsEventPayload<K>>, {
        event: K;
    }, {
        event: K;
        payload: MiniAppsEventPayload<K>;
    }>;
}[U]) => boolean : never;
export type RequestCaptureEventFn<E extends MiniAppsEventName> = If<IsNever<MiniAppsEventPayload<E>>, () => boolean, (payload: MiniAppsEventPayload<E>) => boolean>;
/**
 * `request` method options.
 * @see request
 */
export type RequestOptions<M extends MiniAppsMethodName, E, C> = {
    /**
     * Mini Apps method name.
     */
    method: M;
    /**
     * Tracked Mini Apps events.
     */
    event: E;
    /**
     * Should return true if this event should be captured.
     * A request will be captured if this property is omitted.
     */
    capture?: C;
} & ExecuteWithOptions & If<IsNever<MiniAppsMethodParams<M>>, {}, {
    /**
     * List of method parameters.
     */
    params: MiniAppsMethodParams<M>;
}>;
/**
 * Calls specified Mini Apps method and captures specified event.
 * @param options - method options.
 * @returns Promise which will be resolved with data of the captured event.
 */
export declare function request<M extends MiniAppsMethodName, E extends MiniAppsEventName>(options: RequestOptions<M, E, RequestCaptureEventFn<E>>): Promise<MiniAppsEventPayload<E>>;
/**
 * Calls specified Mini Apps method and captures one of the specified events.
 * @param options - method options.
 * @returns Promise which will be resolved with data of the first captured event.
 */
export declare function request<M extends MiniAppsMethodName, E extends MiniAppsEventName[]>(options: RequestOptions<M, E, RequestCaptureEventsFn<E>>): Promise<RequestEventsPayloads<E>>;
