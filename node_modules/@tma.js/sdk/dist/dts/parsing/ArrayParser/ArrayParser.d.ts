import { ValueParser } from '../ValueParser/ValueParser.js';
import { ArrayParserOfResult } from '../ArrayParser/types.js';
import { AnyParser } from '../types.js';
import { ValueParserParseResult } from '../ValueParser/types.js';

export declare class ArrayParser<ItemType, IsOptional extends boolean> extends ValueParser<unknown[], IsOptional> {
    private itemParser;
    constructor(itemParser: AnyParser<ItemType>, isOptional: IsOptional, type?: string);
    /**
     * Attempts to parse passed value
     * @param value - value to parse.
     * @throws {SDKError} ERR_PARSE
     * @see ERR_PARSE
     */
    parse(value: unknown): ValueParserParseResult<ItemType[], IsOptional>;
    of<Item>(itemParser: AnyParser<Item>): ArrayParserOfResult<this, Item, IsOptional>;
}
